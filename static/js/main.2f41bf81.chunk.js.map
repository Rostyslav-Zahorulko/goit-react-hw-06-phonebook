{"version":3,"sources":["components/Container/Container.js","redux/contacts/contacts-actions.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["Container","children","className","defaultProps","contactsActions","addContact","createAction","name","number","payload","id","nanoid","deleteContact","filterContactsByName","ContactForm","state","handleInputChange","event","currentTarget","value","setState","handleFormSubmit","props","contacts","onSubmit","preventDefault","undefined","find","contact","alert","this","type","required","placeholder","onChange","pattern","Component","connect","items","dispatch","filter","ContactListItem","onClick","getFilteredContacts","allContacts","lowercasedFilter","toLowerCase","includes","map","App","itemsReducer","createReducer","filterReducer","_","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.2f41bf81.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport './Container.scss';\r\n\r\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\r\n\r\nContainer.defaultProps = {\r\n  children: 'Here must be some text...',\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Container;\r\n","import { createAction, nanoid } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('contacts/add', (name, number) => ({\r\n  payload: {\r\n    name,\r\n    number,\r\n    id: nanoid(),\r\n  },\r\n}));\r\nconst deleteContact = createAction('contacts/delete');\r\nconst filterContactsByName = createAction('contacts/filter');\r\n\r\nconst contactsActions = {\r\n  addContact,\r\n  deleteContact,\r\n  filterContactsByName,\r\n};\r\n\r\nexport default contactsActions;\r\n","import { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport contactsActions from '../../redux/contacts/contacts-actions';\r\nimport './ContactForm.scss';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  static propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n        id: PropTypes.string.isRequired,\r\n      }),\r\n    ).isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleFormSubmit = event => {\r\n    const { name, number } = this.state;\r\n    const { contacts, onSubmit } = this.props;\r\n\r\n    event.preventDefault();\r\n\r\n    const existedContactWithTheSameName = contacts.find(\r\n      contact => contact.name === name,\r\n    );\r\n\r\n    if (existedContactWithTheSameName !== undefined) {\r\n      alert(`${name} is already in contacts`);\r\n      return;\r\n    }\r\n\r\n    onSubmit(name, number);\r\n\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form className=\"form\" onSubmit={this.handleFormSubmit}>\r\n        <label className=\"form-field\">\r\n          Name\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            required\r\n            placeholder=\"John Smith\"\r\n            onChange={this.handleInputChange}\r\n          ></input>\r\n        </label>\r\n\r\n        <label className=\"form-field\">\r\n          Number\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            required\r\n            placeholder=\"111-11-11\"\r\n            pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\r\n            onChange={this.handleInputChange}\r\n          ></input>\r\n        </label>\r\n\r\n        <button className=\"add-contact-button\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ contacts }) => ({\r\n  contacts: contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) =>\r\n    dispatch(contactsActions.addContact(name, number)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport contactsActions from '../../redux/contacts/contacts-actions';\r\n\r\nimport './Filter.scss';\r\n\r\nconst Filter = ({ filter, onChange }) => (\r\n  <label className=\"filter\">\r\n    Find contacts by name\r\n    <input\r\n      className=\"filter-input\"\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      value={filter}\r\n      onChange={onChange}\r\n    ></input>\r\n  </label>\r\n);\r\n\r\nconst mapStateToProps = ({ contacts }) => ({\r\n  filter: contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: event =>\r\n    dispatch(contactsActions.filterContactsByName(event.currentTarget.value)),\r\n});\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import PropTypes from 'prop-types';\r\nimport './ContactListItem.scss';\r\n\r\nconst ContactListItem = ({ name, number, onClick }) => (\r\n  <li className=\"contact-list-item\">\r\n    <p className=\"contact-name\">{name}:</p>\r\n    <p className=\"contact-number\">{number}</p>\r\n    <button className=\"delete-contact-button\" type=\"button\" onClick={onClick}>\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport contactsActions from '../../redux/contacts/contacts-actions';\r\nimport ContactListItem from '../ContactListItem';\r\nimport './ContactList.scss';\r\n\r\nconst ContactList = ({ contacts, onClick }) => (\r\n  <ul className=\"contact-list\">\r\n    {contacts.map(({ name, number, id }) => (\r\n      <ContactListItem\r\n        name={name}\r\n        number={number}\r\n        key={id}\r\n        onClick={() => onClick(id)}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nconst getFilteredContacts = (allContacts, filter) => {\r\n  const lowercasedFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(lowercasedFilter),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  contacts: getFilteredContacts(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onClick: id => dispatch(contactsActions.deleteContact(id)),\r\n});\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import Container from './components/Container';\r\nimport ContactForm from './components/ContactForm';\r\nimport Filter from './components/Filter';\r\nimport ContactList from './components/ContactList';\r\nimport './App.scss';\r\n\r\nconst App = () => (\r\n  <Container>\r\n    <h1 className=\"app-title\">Phonebook</h1>\r\n\r\n    <ContactForm />\r\n\r\n    <h2 className=\"section-title\">Contacts</h2>\r\n\r\n    <Filter />\r\n\r\n    <ContactList />\r\n  </Container>\r\n);\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport contactsActions from './contacts-actions';\r\n\r\nconst itemsReducer = createReducer([], {\r\n  [contactsActions.addContact]: (state, { payload }) => [...state, payload],\r\n  [contactsActions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [contactsActions.filterContactsByName]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst middleware = getDefaultMiddleware =>\r\n  getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }).concat(logger);\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware,\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport App from './App';\r\nimport { store, persistor } from './redux/store';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './styles/base.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}